.NET Core console apps are cross-platform apps that use text input and output. 
Blazor WebAssembly lets you build web applications using C# code and HTML/CSS.
Razor lets you add C# code directly into your HTML markup. 

### HTML

# The class="row" attribute tells the page to render everything between <div> </div> in a single row.

# input="range" is an input tag with a type attribute that determines what kind of input controller appears on the screen.


### C#code

# @code {}		// use @ to embed C# code

# OnInitialized() method is called once after the page is loaded

# private void UpdateValue(ChangeEventArgs e) is a Change event handler. 
  This can be hooked up in the HTML with i.e. <input type="range" @onchange="UpdateValue"" />

# While loop does its TEST FIRST, then runs its statements only if true

# do/while runs the STATEMENT FIRST, then runs the test.

# for loops run a statement AFTER each loop

# Use the name of a class to declare an array of instances of that class:
	public class Level {
		Enemy[] enemyArray = new Enemy[5];

	eller

	for (int i = 0; i < 3; i++)
	{
		Enemy enemy = new Enemy();
		enemyArray[i] = enemy;	
	}

	eller 

	foreach (Enemy enemy in enemyArray)
	{
		// code that calls the Enemy methods
	}

# Methods are what an object DOES.
# Fields are what an object KNOWS.
# Behaviour is defined by its methods, and it uses fields to keep track of its states.

# Using the 'static' keyword to declare a field or method in a class, you don't 
  need an instance of that class to access it.
  When a field is static, there's only one copy of it, and it's shared by all instances!


